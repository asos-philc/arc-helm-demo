apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "votingsample-votingapp.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "votingsample-votingapp.name" . }}
    helm.sh/chart: {{ include "votingsample-votingapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "votingsample-votingapp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "votingsample-votingapp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:            
            - name: pfx
              mountPath: /pfx
          env:
          - name: ASPNETCORE_URLS
            valueFrom:
              secretKeyRef:
                name: {{ include "votingsample-votingapp.fullname" . }}-settings
                key: aspnetcore_urls
          - name: ASPNETCORE_Kestrel__Certificates__Default__Path
            valueFrom:
              secretKeyRef:
                name: {{ include "votingsample-votingapp.fullname" . }}-settings
                key: certificate_path
          - name: ASPNETCORE_Kestrel__Certificates__Default__Password
            valueFrom:
              secretKeyRef:
                name: {{ include "votingsample-votingapp.fullname" . }}-settings
                key: certificate_password
          - name: MessageQueue__Url
            valueFrom:
              secretKeyRef:
                name: {{ include "votingsample-votingapp.fullname" . }}-settings
                key: MessageQueue_Url
          ports:
            - name: https
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.ingress.path }}
              port: {{ .Values.service.internalPort }}
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: {{ .Values.ingress.path }}
              port: {{ .Values.service.internalPort }}
              scheme: HTTPS
      volumes:
      - name: pfx
        secret:
          secretName: {{ include "votingsample-votingapp.fullname" . }}-tls
